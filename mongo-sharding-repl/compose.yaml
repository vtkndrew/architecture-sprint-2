version: '3'
name: mongo-sharding-repl

services:
  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv 
    restart: always
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all"
      ] 
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27019" ]
      interval: 5s
      start_period: 10s

  shard1-primary:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-primary
    restart: always
    volumes:
      - shard1-primary-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

  shard1-repl1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-repl1
    restart: always
    volumes:
      - shard1-repl1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

  shard1-repl2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1-repl2
    restart: always
    volumes:
      - shard1-repl2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27018" ]
      interval: 5s
      start_period: 10s

  shard2-primary:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-primary
    restart: always
    volumes:
      - shard2-primary-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27019" ]
      interval: 5s
      start_period: 10s

  shard2-repl1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-repl1
    restart: always
    volumes:
      - shard2-repl1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27019" ]
      interval: 5s
      start_period: 10s

  shard2-repl2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2-repl2
    restart: always
    volumes:
      - shard2-repl2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27019" ]
      interval: 5s
      start_period: 10s


  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    depends_on:
      [
        "configSrv",
        "shard1-primary",
        "shard1-repl1",
        "shard1-repl2",
        "shard2-primary",
        "shard2-repl1",
        "shard2-repl2"
      ]
    container_name: mongos_router
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - router-data:/data/db
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv:27019",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s


  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router"
      MONGODB_DATABASE_NAME: "somedb"

volumes:
  router-data:
  config-data:
  shard1-primary-data:
  shard1-repl1-data:
  shard1-repl2-data:
  shard2-primary-data:
  shard2-repl1-data:
  shard2-repl2-data: